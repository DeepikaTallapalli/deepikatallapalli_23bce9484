package Connection;

import java.util.ArrayList;
import java.util.List;

import org.bson.Document;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;
import com.mongodb.client.model.Updates;

public class MongoDB {
    public static void main(String[] args) {
        // Create MongoDB client
        MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");

        // Get database
        MongoDatabase database = mongoClient.getDatabase("myDb");

        // Get collection
        MongoCollection<Document> collection = database.getCollection("sampleCollection");

       collection.deleteOne(Filters.eq("First_Name","Mahesh"));
        
        System.out.println("Document deleted.");
        System.out.println("***Documents ***");

        // Print updated document
        FindIterable<Document> documents= collection.find();
        for (Document document : documents) {
            System.out.println(document);
        }

        mongoClient.close(); // Close client
    }
}


package Connection;

import org.bson.Document;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;

public class MongoDB {
    public static void main(String[] args) {
        // Create MongoDB client
        MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");

        // Get database and collection
        MongoDatabase database = mongoClient.getDatabase("test");
        MongoCollection<Document> collection = database.getCollection("sales");

        collection.deleteOne(Filters.eq("item", "Capp uccino"));

        collection.deleteMany(Filters.eq("item", "Cappuccino"));

        System.out.println("Document deleted.");
        System.out.println("***Documents***");

        FindIterable<Document> documents = collection.find();
        for (Document document : documents) {
            System.out.println(document.toJson());
        }

        mongoClient.close(); // Close client
    }
}



package Connection;

import org.bson.Document;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;

public class MongoDB {
    public static void main(String[] args) {
        // Create MongoDB client
        MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");

        // Get database and collection
        MongoDatabase database = mongoClient.getDatabase("test");
        MongoCollection<Document> collection = database.getCollection("sampleCollection");

                collection.deleteOne(Filters.eq("First_Name", "Mahesh"));


        System.out.println("Document deleted.");
        System.out.println("***Documents***");

        // Print all remaining documents
        FindIterable<Document> documents = collection.find();
        for (Document document : documents) {
            System.out.println(document.toJson());
        }

        mongoClient.close(); // Close client
    }
}


package Connection;

import org.bson.Document;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;

public class MongoDB {
    public static void main(String[] args) {
        // Create MongoDB client
        MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");

        // Get database and collection
        MongoDatabase database = mongoClient.getDatabase("myDB");
        MongoCollection<Document> collection = database.getCollection("sampleCollection");

             FindIterable<Document> documents = collection.find().limit(2);
        for (Document document : documents) {
            System.out.println(document.toJson());
        }

            }
}


package Connection;

import org.bson.Document;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.BasicDBObject; 
public class MongoDB {
    public static void main(String[] args) {
        // Create MongoDB client
        MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");

        // Get database and collection
        MongoDatabase database = mongoClient.getDatabase("myDB");
        MongoCollection<Document> collection = database.getCollection("sampleCollection");

        // Ascending order by First_Name
        System.out.println("*** Ascending order ***");
        FindIterable<Document> allDocuments = collection.find().sort(new BasicDBObject("First_Name", 1));
        for (Document document : allDocuments) {
            System.out.println(document);
        }
    }
}


package Connection;

import org.bson.Document;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.BasicDBObject; // Needed for sorting

public class MongoDB {
    public static void main(String[] args) {
        // Create MongoDB client
        MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");

        // Get database and collection
        MongoDatabase database = mongoClient.getDatabase("myDB");
        MongoCollection<Document> collection = database.getCollection("sampleCollection");

        // Descending order by First_Name
        System.out.println("*** Descending order ***");
        FindIterable<Document> allDocuments = collection.find().sort(new BasicDBObject("First_Name", -1));
        for (Document document : allDocuments) {
            System.out.println(document);
        }
    }
}



